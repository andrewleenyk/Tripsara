name: CI/CD Pipeline

on:
  push:
    branches: [main, "epic-*"]
  pull_request:
    branches: [main, "epic-*"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # Backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run Backend Lint
        working-directory: ./backend
        run: npm run lint

      - name: Run Backend Tests
        working-directory: ./backend
        run: npm test
        env:
          NODE_ENV: test
          DB_NAME: tripfundr_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          JWT_SECRET: test_secret

      # Frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run Frontend Lint
        working-directory: ./frontend
        run: npm run lint

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Deploy Backend to Render
      - name: Deploy Backend to Render
        uses: render/deploy@v1
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      # Deploy Frontend to Vercel
      - name: Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
